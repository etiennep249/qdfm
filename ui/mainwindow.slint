import { StandardListView, ProgressIndicator, ScrollView} from "std-widgets.slint";
import { DriveList, SidebarItems , NavArrows} from "sidebar.slint";
import { TabWidget_, TabsAdapter } from "tabs.slint";
import { FileManager, FileItem } from "filemanager.slint";
import { Theme } from "theme.slint";
import { HSeparator } from "utils.slint";
import { ColumnHeadersAdapter } from "colheaders.slint";
import { ContextMenu, ContextAdapter, ContextItem, SecondaryContextMenu } from "context-menu.slint";
import { PropertiesWindow, PropertiesAdapter } from "properties.slint";

export { FileManager, SidebarItems, TabsAdapter, Theme, ColumnHeadersAdapter, ContextAdapter, ContextItem, PropertiesWindow, PropertiesAdapter }

export component MainWindow inherits Window {
    in-out property <length> win_height <=> self.height;
    in-out property <length> win_width <=> self.width;
    private property <length> nav_arrows_height: 30px;
    background: Theme.current.background-color-main;
    ctx_popup := Rectangle {
        visible: false;
        z: 15;
        ContextMenu { }
    }

    secondary_ctx_popup := Rectangle {
        visible <=> ContextAdapter.is_secondary_visible;
        z: 15;
        SecondaryContextMenu { }
    }

    title: "QDFM";

    fullscreen_area := TouchArea {
        x: 0;
        y: 0;
        z: 14;
        width: parent.width;
        height: parent.height;
        visible: false;
        pointer-event(e) => {
            if (e.kind == PointerEventKind.down) {
                hide_context_menu();
            }
        }
    }

    public function hide_context_menu() {
        ctx_popup.visible = false;
        secondary-ctx-popup.visible = false;
        fullscreen-area.visible = false;
    }

    callback context_menu(length, length, FileItem);
    context-menu(x, y, file) => {
        ContextAdapter.show_context_menu(x,y,file);
        ctx_popup.visible = true;
        fullscreen-area.visible = true;
    }
    HorizontalLayout {
        padding-left: Theme.current.main-padding-left;
        padding-top: Theme.current.main-padding-top;
        padding-right: Theme.current.main-padding-right;
        padding-bottom: Theme.current.main-padding-bot;
        l := VerticalLayout {
            width: Theme.current.sidebar-width;
            spacing: 5px;
            NavArrows {
                _height: nav_arrows_height;
            }

            Text {
                text: "Drives";
                font-size: Theme.current.font-size-sidebar-header;
                color: Theme.current.text-color-sidebar-header;
            }

            DriveList {
                _width: Theme.current.sidebar-width;
                model: SidebarItems.drive-list;
            }
        }

        TabWidget_ {
            tabs: TabsAdapter.tabs;
            current-tab: TabsAdapter.current-tab-idx;
            context-menu(x, y, file) => {
                root.context-menu(x,y,file);
            }
        }
    }

    //Sidebar separator
    HSeparator {
        background: Theme.current.separator-color;
        x: Theme.current.sidebar-width;
        y: 0;
        height: parent.height - Theme.current.main-padding-bot;
    }
}
