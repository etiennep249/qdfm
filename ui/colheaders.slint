import {Icons} from "icons.slint";
import {Theme} from "theme.slint";

export struct Header {
    inner_value: int,
    display: string,
    width_pct: length,
    sort: int,
    alignment: int,//0-left, 1-center, 2-right
}

export global ColumnHeadersAdapter {
    in-out property <[Header]> headers;
    callback header_clicked(Header);
    callback adjust_size(Header, length, length);
}

//Inspired from StandardTableView component
export component HeaderSeparator inherits Rectangle {
    in property <Header> header;
    width: 1px;
    
    touch := TouchArea {
        width: 10px;
        mouse-cursor: ew-resize;
        moved => {
            if (self.pressed) {
                ColumnHeadersAdapter.adjust_size(header, self.mouse-x - self.pressed-x, parent.x +1px);
            }
        }
    }
    states [
        hover when touch.has-hover : {
            background: Theme.current.separator-color;
        }
    ]
    animate background {duration: 150ms;}
    //background: Theme.current.separator-color;

}

export component ColumnItem inherits Rectangle{
    in property <Header> header;
    in property <int> index;
    touch := TouchArea {
        text := Text {
            x: parent.x;
            vertical-alignment: center;
            horizontal-alignment: header.alignment == 0 ? left : header.alignment == 1 ? center : right;
            width: touch.width;
            text: header.display;
            font-size: Theme.current.font-size-header;
        }
        img := Image {
            x: header.alignment == 2 ? touch.x + 2px : touch.width - self.width - 2px;
            source: header.sort == 1 ? Icons.up-arrow : Icons.down-arrow;
            colorize: Theme.current.header-arrows-color;
            height: 20px;
            width: 20px;
            visible: header.sort == 0 ? false : true;
        }  
        clicked => {
            ColumnHeadersAdapter.header_clicked(header);
        }
    }
    HeaderSeparator {
        visible: index != ColumnHeadersAdapter.headers.length - 1;
        x: touch.width + 4px;
        header: header;
    }
}


export component ColumnHeaders inherits Rectangle {
    height: 24px;
    HorizontalLayout {
        padding-left: 2px;
        padding-top: 2px;
        padding-bottom: 2px;
        padding-right: 2px;
        spacing: 8px;
        alignment: stretch;
        for header[i] in ColumnHeadersAdapter.headers : ColumnItem {
            header: header;
            index: i;
            horizontal-stretch: header.width-pct/1px;
        }
    }
}
